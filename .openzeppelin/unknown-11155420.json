{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x33F67739DE6c7d12e87514d0A0673129400ea216",
      "txHash": "0xc2d7a627ae17f0cf11a6c51ead09d6ae64c91a7777f9081c7c51a8e8465a0e49",
      "kind": "uups"
    },
    {
      "address": "0xf6FC826bD937c4aA4377E201275b7B6B5379F47A",
      "txHash": "0xd526af0610fd25acc5854036971409f17726fb8d9dd4d268fbf2c72785eaeaf6",
      "kind": "uups"
    },
    {
      "address": "0x2502f6E62A696d0D395c9Edcaf38C443282511db",
      "txHash": "0xe853aa827da8fa3b369648a6767e1de8d3523427fe5f3c9cb469c102bc876564",
      "kind": "uups"
    }
  ],
  "impls": {
    "76def973ad753c1c0d0644050259bd7399c4af86aafeca882595896baedfa82c": {
      "address": "0x081fd5eDD05da93e9887F510847449EE7d2E1D1F",
      "txHash": "0xd13436c11054ce6b412a2aeeaa605ab1bf6a23bdab486065bf8d7f0de87fccb9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "ProfileRegistry",
            "src": "contracts/NewProfileRegistry.sol:35"
          },
          {
            "label": "followRegistryAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "ProfileRegistry",
            "src": "contracts/NewProfileRegistry.sol:36"
          },
          {
            "label": "addressToProfileID",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProfileRegistry",
            "src": "contracts/NewProfileRegistry.sol:39"
          },
          {
            "label": "handleOwnershipById",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ProfileRegistry",
            "src": "contracts/NewProfileRegistry.sol:41"
          },
          {
            "label": "idToProfileDetails",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Profile)11535_storage)",
            "contract": "ProfileRegistry",
            "src": "contracts/NewProfileRegistry.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Profile)11535_storage)": {
            "label": "mapping(uint256 => struct ProfileRegistry.Profile)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Profile)11535_storage": {
            "label": "struct ProfileRegistry.Profile",
            "members": [
              {
                "label": "handle",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "subscribeModule",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "937bbd4cd9a562e1be66ea171400373dd2fb37f8c91da96b61da07b20ce8ed4f": {
      "address": "0xc97c3dA66F96267597462dC3D2277edF8f742f68",
      "txHash": "0x1795dceddaa3aba640fede4d8a32dee3916c562fc995f821176eca265ea075d0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "protocolFeeDestination",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "SimpleMarketMaster",
            "src": "contracts/SimpleMarketMaster.sol:37"
          },
          {
            "label": "simpleFeePercent",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "SimpleMarketMaster",
            "src": "contracts/SimpleMarketMaster.sol:38"
          },
          {
            "label": "basePrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "SimpleMarketMaster",
            "src": "contracts/SimpleMarketMaster.sol:39"
          },
          {
            "label": "tokenSupply",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SimpleMarketMaster",
            "src": "contracts/SimpleMarketMaster.sol:46"
          },
          {
            "label": "creator",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "SimpleMarketMaster",
            "src": "contracts/SimpleMarketMaster.sol:48"
          },
          {
            "label": "supplyLimit",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SimpleMarketMaster",
            "src": "contracts/SimpleMarketMaster.sol:50"
          },
          {
            "label": "tokenPrice",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "SimpleMarketMaster",
            "src": "contracts/SimpleMarketMaster.sol:52"
          },
          {
            "label": "isBonded",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "SimpleMarketMaster",
            "src": "contracts/SimpleMarketMaster.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "f5d569aa56382170423fbb4a40353e67c4a3be00cbdb54fdc34ae526467c1301": {
      "address": "0x50bDc13cb718ED48180Ff398D406F93BFF3798D4",
      "txHash": "0x7516db0276ca30cbded9d0dc66546d0554604692afe05971f4f8f112799d3fc1",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "CollectionRegistry",
            "src": "contracts/collections/CollectionRegistry.sol:31"
          },
          {
            "label": "_collectionFactoryAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CollectionRegistry",
            "src": "contracts/collections/CollectionRegistry.sol:33"
          },
          {
            "label": "addressToTokenID",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollectionRegistry",
            "src": "contracts/collections/CollectionRegistry.sol:43"
          },
          {
            "label": "collectionAddresses",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CollectionRegistry",
            "src": "contracts/collections/CollectionRegistry.sol:45"
          },
          {
            "label": "_uris",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "CollectionRegistry",
            "src": "contracts/collections/CollectionRegistry.sol:47"
          },
          {
            "label": "tokenSupply",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CollectionRegistry",
            "src": "contracts/collections/CollectionRegistry.sol:50"
          },
          {
            "label": "tokenPermissions",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CollectionRegistry",
            "src": "contracts/collections/CollectionRegistry.sol:52"
          },
          {
            "label": "marketAddresses",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CollectionRegistry",
            "src": "contracts/collections/CollectionRegistry.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
